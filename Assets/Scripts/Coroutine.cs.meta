using System.Collections.Generic;
using UnityEngine;
using System.Collections;

// In this example we show how to invoke a coroutine and execute
// the function in parallel.  Start does not need IEnumerator.

public class Coroutine : MonoBehaviour
{
	void Start()
	{
		// - After 0 seconds, prints "Starting 0.0 seconds"
		// - After 0 seconds, prints "Coroutine started"
		// - After 2 seconds, prints "Coroutine ended: 2.0 seconds"
		print("Starting " + Time.time + " seconds");

		// Start function WaitAndPrint as a coroutine.

		StartCoroutine(WaitAndPrintszz);

		print("Coroutine started");
	}

	private IEnumerator WaitAndPrint(float waitTime)
	{
        //play
		yield return new WaitForSeconds(1.0f);
        //stop
    }
}
}
